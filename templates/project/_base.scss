// ---------------------------------------------------------------------------
// Imports

@import "compass";
@import "susy";
@import "variable";

// ---------------------------------------------------------------------------
// Mixins

// Fonts & @font-face mixins
// Feel free to customize it!
// =================================================================================

// Font mixins
// ------------------
@mixin ff-text {
  font-family: $arial; // Global font
}

@mixin ff-heading {
  font-family: $arial; // Heading font
}

@mixin ff-decorative{
  font-family: $cursive;
}

@mixin ff-mono{
  font-family: $consolas;
}

// Mixin for reset list
// ------------------
@mixin reset-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

// Basic button Mixins
// ------------------
// Mixins to create a simple and basic buttons
// Author : Satrya - @msattt
// URL    : http://tokokoo.com
//
// Usage:
//
// Basic button
// .btn {
//    @include button( #fff, #333 );
// }
//
// Button with blue background color
// .blue {
//    @include button-base( #2d48c0, #fff, true, dark );
// }
//
// Button with black background color
// .black {
//    @include button-base( #333, #fff, true, dark );
// }
//
// Button with green background color
// .green {
//    @include button-base( #0fdb30, #fff, true, dark ); 
// }
//
// Button with small size
// .small {
//    @include button-size( 13px, 8px 18px  );
// }
//
// Button with large size
// .large {
//    @include button-size( 24px, 18px 35px );
// }
//
// in your HTML, you can call like this:
//
// <a class="btn" href="#">Button</a>
// <a class="btn blue" href="#">Button</a>
// <a class="btn black" href="#">Button</a>
// <a class="btn green" href="#">Button</a>
// <a class="btn black small" href="#">Button</a>
// <a class="btn green large" href="#">Button</a>
// =================================================================================
@import "compass/css3/user-interface";

$default-border   : true !default;
$default-text-shadow: light !default;
$default-fsize    : 0.875em !default;
$default-pad    : rhythm(.4) rhythm(.8) !default;
$default-radius   : 3px !default;
$default-display  : "inline-block" !default;
$default-margin   : 0 !default;

// Quick use
@mixin button( 
  $bg-color, 
  $color, 
  $border   : $default-border,
  $text-shad  : $default-text-shadow, 
  $fsize    : $default-fsize, 
  $pad    : $default-pad, 
  $radius   : $default-radius, 
  $display  : $default-display, 
  $margin   : $default-margin 
) {
  @include button-base( $bg-color, $color, $border, $text-shad );
  @include button-size( $fsize, $pad  );
  @include button-struture( $radius, $display, $margin );
}

// Button base
// Background color, text color, border, text shadow
@mixin button-base( 
  $bg-color, 
  $color, 
  $border   : $default-border,
  $text-shad  : $default-text-shadow 
) {
  $dark-color     : darken($bg-color, 5%);
  $border-color   : darken($bg-color, 10%);
  $text-shadow-color  : darken($bg-color, 10%);
  
  background: $bg-color;
  @include background-image( linear-gradient( $bg-color, $dark-color) );
  @if $border == true {
    border: 1px solid $border-color;
  }
  color: $color;
  @if $text-shad == light {
    @include text-shadow( $white 0 1px 1px );
  } @if $text-shad == dark {
    @include text-shadow( $text-shadow-color 0 -1px 0 );
  }
  
  &:hover, 
  &:focus {
    background: darken($bg-color, 5%);
    color: $color;
  }
  &:visited {
    color: $color;
  }
  
}

// Button size
// Font size, padding
@mixin button-size( 
  $fsize  : $default-fsize, 
  $pad  : $default-pad 
) {
  font-size: $fsize;
  padding: $pad;
}

// Button structure
// border-radius, display, margin
@mixin button-struture( 
  $radius   : $default-radius, 
  $display  : $default-display, 
  $margin   : $default-margin 
) {
  @include border-radius( $radius );
  @include box-shadow(
    inset 0 1px 0 rgba($white, .2), 
    0 1px 2px rgba($black, .05)
  );
  cursor: pointer;
  
  @if $display == "inline-block" {
    @include inline-block;
  } @if $display == "inline" {
    display: inline;
  } @if $display == "block" {
    display: block;
  }
  
  font-weight: normal;
  line-height: 1;
  margin: $margin;
  position: relative;
  text-decoration: none;
  @include user-select( none );
  
  &:hover, 
  &:focus {
    text-decoration: none;
  }
  
  &:active {
    @include single-box-shadow( rgba($black, .15), 0, 2px, 3px, 0, true );
    outline: 0;
  }
  
}

// Mixin for selection markup
// ------------------
@mixin selection($background, $color, $element:false) {
  @if($element) {
    &::-moz-selection{ background:$background; color:$color; text-shadow:none; }
    &::selection { background:$background; color:$color; text-shadow:none; }
  } @else {
    ::-moz-selection{ background:$background; color:$color; text-shadow:none; }
    ::selection { background:$background; color:$color; text-shadow:none; }
  }
}

// Center-align a block level element
// ----------------------------------
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
